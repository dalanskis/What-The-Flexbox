/* Some CSS Setup - nothing to do with flexbox */
html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  font-family: sans-serif;
  margin: 0;
  background-image: linear-gradient(260deg, #2376ae 0%, #c16ecf 100%);
}

a {
  color:white;
}

.plan ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.plan ul li {
  border-bottom: 1px solid rgba(0,0,0,0.1);
  padding:10px;
}

.plan ul li:last-child {
  border-bottom: 0;
}

.plan a {
  text-decoration: none;
  background:#FEFF00;
  padding:10px;
  color:black;
  border-radius:4px;
}


.plan h2 {
  text-transform: uppercase;
  color:white;
  letter-spacing: 2px;
  text-shadow:3px 3px 0 rgba(0,0,0,0.1);
}

.price {
  font-size: 50px;
  font-family: serif;
  margin: 10px 0;
}

/* Flex Container */
.pricing-grid {
  max-width:750px;
  margin: 0 auto;
  display: flex;
  align-items: center;  /*With this set, you get the variable sizes in height for the flex items. If undone, theyre all the same height despite content within.  */
}

/* Flex Item */
.plan {
  background: rgba(255, 255, 255, 0.2);
  margin: 20px;
  padding: 20px;
  border-radius: 4px;
  text-align: center;
  
  flex: 1;
  display: flex;
  flex-wrap: wrap;
}

/* All direct descendents of Plan are list items. The asterisk means all direct descendents.  */

.plan > * {
   flex: 1 1 100%; /*Written in shorthand. This is row, shrink, basis */
}
/* flex-basis: 100%; Without a width set in anyway, things look broken. We need to add flex basis to give a width to these flex items.  */

.plan .cta {
  align-self: flex-end;
}










